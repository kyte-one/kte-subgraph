
ý±ó±[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_gateway",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_factory",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_creator",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "assetName",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "assetFeed",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "decimals",
            "type": "uint8"
          },
          {
            "internalType": "enum MarketLibrary.AssetFeedType",
            "name": "assetFeedType",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "active",
            "type": "bool"
          }
        ],
        "internalType": "struct MarketLibrary.Asset",
        "name": "_asset",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "creationTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "tradingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "waitingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "reportingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "disputeEndTime",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketLibrary.MarketTime",
        "name": "_marketTime",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "upper",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lower",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "staked",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "participants",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "positions",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketLibrary.Pool[]",
        "name": "_pools",
        "type": "tuple[]"
      },
      {
        "internalType": "uint256",
        "name": "_LC",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint8",
        "name": "prediction",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "positions",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "date",
        "type": "uint256"
      }
    ],
    "name": "PredictionPlaced",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      }
    ],
    "name": "claimReturns",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAsset",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "assetName",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "assetFeed",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "decimals",
            "type": "uint8"
          },
          {
            "internalType": "enum MarketLibrary.AssetFeedType",
            "name": "assetFeedType",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "active",
            "type": "bool"
          }
        ],
        "internalType": "struct MarketLibrary.Asset",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarket",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "marketAddress",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "assetName",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "assetFeed",
                "type": "address"
              },
              {
                "internalType": "uint8",
                "name": "decimals",
                "type": "uint8"
              },
              {
                "internalType": "enum MarketLibrary.AssetFeedType",
                "name": "assetFeedType",
                "type": "uint8"
              },
              {
                "internalType": "bool",
                "name": "active",
                "type": "bool"
              }
            ],
            "internalType": "struct MarketLibrary.Asset",
            "name": "asset",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "creationTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tradingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "waitingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reportingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "disputeEndTime",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.MarketTime",
            "name": "time",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "upper",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lower",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "staked",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "participants",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "rewards",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "enum MarketLibrary.Phase",
            "name": "phase",
            "type": "uint8"
          }
        ],
        "internalType": "struct MarketLibrary.MarketResponse",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarketEntity",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarketPhase",
    "outputs": [
      {
        "internalType": "enum MarketLibrary.Phase",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarketTime",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "creationTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "tradingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "waitingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "reportingEndTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "disputeEndTime",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketLibrary.MarketTime",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      }
    ],
    "name": "getMarketUser",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint24",
            "name": "numberOfPredictions",
            "type": "uint24"
          },
          {
            "internalType": "bool",
            "name": "rewardClaimed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "boostModeApplied",
            "type": "bool"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "leverage",
                "type": "uint8"
              }
            ],
            "internalType": "struct MarketLibrary.Prediction[]",
            "name": "predictions",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "internalType": "struct MarketLibrary.MarketUserResponse",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      }
    ],
    "name": "getMarketUserData",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint24",
            "name": "numberOfPredictions",
            "type": "uint24"
          },
          {
            "internalType": "bool",
            "name": "rewardClaimed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "boostModeApplied",
            "type": "bool"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "leverage",
                "type": "uint8"
              }
            ],
            "internalType": "struct MarketLibrary.Prediction[]",
            "name": "predictions",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "internalType": "struct MarketLibrary.MarketUserResponse",
        "name": "",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "address",
            "name": "marketAddress",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "assetName",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "assetFeed",
                "type": "address"
              },
              {
                "internalType": "uint8",
                "name": "decimals",
                "type": "uint8"
              },
              {
                "internalType": "enum MarketLibrary.AssetFeedType",
                "name": "assetFeedType",
                "type": "uint8"
              },
              {
                "internalType": "bool",
                "name": "active",
                "type": "bool"
              }
            ],
            "internalType": "struct MarketLibrary.Asset",
            "name": "asset",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "creationTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tradingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "waitingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reportingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "disputeEndTime",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.MarketTime",
            "name": "time",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "upper",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lower",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "staked",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "participants",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "rewards",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "enum MarketLibrary.Phase",
            "name": "phase",
            "type": "uint8"
          }
        ],
        "internalType": "struct MarketLibrary.MarketResponse",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarketUsers",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint24",
            "name": "numberOfPredictions",
            "type": "uint24"
          },
          {
            "internalType": "bool",
            "name": "rewardClaimed",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "boostModeApplied",
            "type": "bool"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "leverage",
                "type": "uint8"
              }
            ],
            "internalType": "struct MarketLibrary.Prediction[]",
            "name": "predictions",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "internalType": "struct MarketLibrary.MarketUserResponse[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "_prediction",
        "type": "uint8"
      }
    ],
    "name": "getPoolPrice",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPoolsPrice",
    "outputs": [
      {
        "internalType": "uint64[]",
        "name": "",
        "type": "uint64[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "_prediction",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      },
      {
        "internalType": "uint8",
        "name": "_leverage",
        "type": "uint8"
      }
    ],
    "name": "getPositions",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getRewards",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "creator",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "platform",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "settler",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "users",
            "type": "uint256"
          }
        ],
        "internalType": "struct CryptoMarket.Rewards",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalPools",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalRewards",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalStaked",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      }
    ],
    "name": "getUserTotalReturns",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getWinningPool",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint80",
        "name": "_roundId",
        "type": "uint80"
      }
    ],
    "name": "getWinningPoolOracle",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_user",
        "type": "address"
      },
      {
        "internalType": "uint8",
        "name": "_prediction",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      },
      {
        "internalType": "uint8",
        "name": "_leverage",
        "type": "uint8"
      }
    ],
    "name": "placePrediction",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_settler",
        "type": "address"
      },
      {
        "internalType": "uint80",
        "name": "_roundId",
        "type": "uint80"
      }
    ],
    "name": "settleMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]ó±