
²„¨„[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_gateway",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "WW",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "RW",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "DW",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketLibrary.MarketWindowParams",
        "name": "_marketWindowParams",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "min",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "max",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketFactory.MarketDurationParams",
        "name": "_marketDurationParams",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "asset",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "assetFeed",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint8",
        "name": "decimals",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "enum MarketLibrary.AssetFeedType",
        "name": "assetFeedType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "creator",
        "type": "address"
      }
    ],
    "name": "AssetAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "assetId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "creationTime",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "duration",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "pools",
        "type": "uint256[]"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "liquidity",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "creator",
        "type": "address"
      }
    ],
    "name": "MarketCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "_asset",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "_assetFeed",
        "type": "address"
      },
      {
        "internalType": "uint8",
        "name": "_decimals",
        "type": "uint8"
      },
      {
        "internalType": "enum MarketLibrary.AssetFeedType",
        "name": "_assetFeedType",
        "type": "uint8"
      }
    ],
    "name": "addAsset",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_assetId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_duration",
        "type": "uint256"
      },
      {
        "internalType": "uint256[]",
        "name": "_pools",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256",
        "name": "_liquidity",
        "type": "uint256"
      }
    ],
    "name": "createMarket",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllAssets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "assetName",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "assetFeed",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "decimals",
            "type": "uint8"
          },
          {
            "internalType": "enum MarketLibrary.AssetFeedType",
            "name": "assetFeedType",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "active",
            "type": "bool"
          }
        ],
        "internalType": "struct MarketLibrary.Asset[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_assetId",
        "type": "uint256"
      }
    ],
    "name": "getAsset",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "assetName",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "assetFeed",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "decimals",
            "type": "uint8"
          },
          {
            "internalType": "enum MarketLibrary.AssetFeedType",
            "name": "assetFeedType",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "active",
            "type": "bool"
          }
        ],
        "internalType": "struct MarketLibrary.Asset",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getMarketDurationParams",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "min",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "max",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketFactory.MarketDurationParams",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum MarketLibrary.MarketWindow",
        "name": "_windowType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_duration",
        "type": "uint256"
      }
    ],
    "name": "getMarketWindow",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_pageSize",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_offset",
        "type": "uint256"
      }
    ],
    "name": "getMarkets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "marketAddress",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "assetName",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "assetFeed",
                "type": "address"
              },
              {
                "internalType": "uint8",
                "name": "decimals",
                "type": "uint8"
              },
              {
                "internalType": "enum MarketLibrary.AssetFeedType",
                "name": "assetFeedType",
                "type": "uint8"
              },
              {
                "internalType": "bool",
                "name": "active",
                "type": "bool"
              }
            ],
            "internalType": "struct MarketLibrary.Asset",
            "name": "asset",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "creationTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tradingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "waitingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reportingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "disputeEndTime",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.MarketTime",
            "name": "time",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "upper",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lower",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "staked",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "participants",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "rewards",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "enum MarketLibrary.Phase",
            "name": "phase",
            "type": "uint8"
          }
        ],
        "internalType": "struct MarketLibrary.MarketResponse[]",
        "name": "",
        "type": "tuple[]"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getOnGoingMarkets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "marketAddress",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "assetName",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "assetFeed",
                "type": "address"
              },
              {
                "internalType": "uint8",
                "name": "decimals",
                "type": "uint8"
              },
              {
                "internalType": "enum MarketLibrary.AssetFeedType",
                "name": "assetFeedType",
                "type": "uint8"
              },
              {
                "internalType": "bool",
                "name": "active",
                "type": "bool"
              }
            ],
            "internalType": "struct MarketLibrary.Asset",
            "name": "asset",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "creationTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tradingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "waitingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reportingEndTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "disputeEndTime",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.MarketTime",
            "name": "time",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "upper",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lower",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "staked",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "participants",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "positions",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "rewards",
                "type": "uint256"
              }
            ],
            "internalType": "struct MarketLibrary.Pool[]",
            "name": "pools",
            "type": "tuple[]"
          },
          {
            "internalType": "enum MarketLibrary.Phase",
            "name": "phase",
            "type": "uint8"
          }
        ],
        "internalType": "struct MarketLibrary.MarketResponse[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalMarkets",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_market",
        "type": "address"
      },
      {
        "internalType": "uint80",
        "name": "_roundId",
        "type": "uint80"
      }
    ],
    "name": "settleMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "min",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "max",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketFactory.MarketDurationParams",
        "name": "_marketDurationParams",
        "type": "tuple"
      }
    ],
    "name": "updateMarketDurationParams",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum MarketLibrary.MarketWindow",
        "name": "_windowType",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "updateMarketWindowParams",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]¨„