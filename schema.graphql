enum AssetFeedType {
  Price
  Volume
  Rank
}

enum Phase {
  # Trading includes all internal phases -Trading, Waiting, Reporting
  Trading
  Disputed
  Settled
}

type Factory @entity {
  # factory address
  id: ID!
  # Minimum market liquidity
  minMarketLiquidity: BigInt!
  # Loss constant
  lossConstant: Int!
  # Creator fee in percent
  creatorFee: Int!
  # Settler fee in percent
  settlerFee: Int!
  # Platform fee in percent
  platformFee: Int!
  # Waiting window
  waitingWindow: Int!
  # Reporting window
  reportingWindow: Int!
  # Dispute window
  disputeWindow: Int!
  # Market minimum duration
  marketMinDuration: Int!
  # MArket max duration
  marketMaxDuration: Int!
  # Total assets
  totalAssets: Int!
  # Total Tokens
  totalTokens: Int!
  # Total markets created
  totalMarkets: Int!
  # total Predictions
  totalPredictions: Int!
  # Total market participants
  totalParticipants: Int!
  # Total participation
  totalParticipation: BigInt!
  # Total rewards
  totalRewards: BigInt!
  # Total markets in trading
  totalMarketsInTrading: Int!
  # Total markets in disputes
  totalMarketsInDispute: Int!
  # Total markets settled
  totalMarketsSettled: Int!
  # current owner of the factory
  owner: ID!
  # Hourly factory snapshots
  factoryHourData: [FactoryHourData!]! @derivedFrom(field: "factory")
  # Daily factory snapshots
  factoryDayData: [FactoryDayData!]! @derivedFrom(field: "factory")
}

type FactoryHourData @entity {
  # asset id
  id: ID!
  # Factory pointer
  factory: Factory!
  # unix timestamp for start of hour
  timestamp: Int!
  # Total participants
  participants: Int!
  # Total Participation
  participation: BigInt!
  # Total predictions
  predictions: Int!
}

type FactoryDayData @entity {
  # asset id
  id: ID!
  # Factory pointer
  factory: Factory!
  # timestamp rounded to current day by dividing by 86400
  timestamp: Int!
  # Total participants
  participants: Int!
  # Total Participation
  participation: BigInt!
  # Total predictions
  predictions: Int!
}

type MarketToken @entity {
  # tokenId
  id: ID!
  # Address of creator
  creator: Bytes!

  markets: [Market!]! @derivedFrom(field: "token")
}

type Asset @entity {
  # asset id
  id: ID!
  # Asset 0
  asset0: String!
  # Asset 1
  asset1: String!
  # Decimal place
  decimals: Int!
  # Address of creator
  creator: Bytes!
  # Asset feed type
  assetFeedType: AssetFeedType!
  # Asset feed address
  assetFeed: Bytes!

  # Total markets created
  totalMarkets: Int!
  # total Predictions
  totalPredictions: Int!
  # Total participation
  totalParticipation: BigInt!
  # Total rewards distribute
  totalRewards: BigInt!

  markets: [Market!]! @derivedFrom(field: "asset")
  # Hourly asset snapshots
  assetHourData: [AssetHourData!]! @derivedFrom(field: "asset")
  # Daily asset snapshots
  assetDayData: [AssetDayData!]! @derivedFrom(field: "asset")
}

type AssetHourData @entity {
  # asset id
  id: ID!
  # Asset pointer
  asset: Asset!
  # unix timestamp for start of hour
  timestamp: Int!
  # Total Participation
  participation: BigInt!
  # Total predictions
  predictions: Int!
  # Total rewards
  rewards: BigInt!
}

type AssetDayData @entity {
  # asset id
  id: ID!
  # Asset pointer
  asset: Asset!
  # timestamp rounded to current day by dividing by 86400
  timestamp: Int!
  # Total Participation
  participation: BigInt!
  # Total predictions
  predictions: Int!
  # Total rewards
  rewards: BigInt!
}

type User @entity {
  # user address
  id: ID!
  # Avatar
  avatar: String
  # user total market created
  totalMarketCreated: Int!
  # user total market participated
  totalMarketParticipated: Int!
  # user total predictions
  totalPredictions: Int!
  # total market settled by user
  totalSettled: Int!
  # Number of returns pending
  numReturnsPending: Int!
  # Total participation amount
  totalParticipationAmount: BigInt!
  # Total returns claimed
  totalReturnsClaimed: BigInt!
  # total reward claimed (correct prediction + settlement + creation)
  totalRewardsClaimed: BigInt!
  # total prediction reward claimed
  totalPredictionRewardClaimed: BigInt!
  # Total market creation reward
  totalMarketCreationRewardClaimed: BigInt!
  # total market settlement reward
  totalSettlementRewardClaimed: BigInt!
  # Total loss
  totalLoss: BigInt!
  # total profit and loss
  totalPNL: BigInt!
  # daily user predictions snapshots
  userDayData: [UserDayData!]! @derivedFrom(field: "user")
  # monthly user predictions snapshots
  userMonthData: [UserMonthData!]! @derivedFrom(field: "user")
  # User all predictions
  predictions: [MarketPrediction!]! @derivedFrom(field: "user")
  # User market information
  marketUsers: [MarketUser!]! @derivedFrom(field: "user")
}

type UserDayData @entity {
  # timestamp rounded to current day by dividing by 86400
  id: ID!
  # User pointer
  user: User!
  # timestamp rounded to current day by dividing by 86400
  timestamp: Int!
  # Profit and loss
  pnl: BigInt!
  # user predictions
  predictions: Int!
  # user participation
  participation: BigInt!
  # (correct prediction + settlement + creation)
  rewards: BigInt!
}

type UserMonthData @entity {
  # timestamp rounded to current month by dividing by 86400
  id: ID!
  # User pointer
  user: User!
  # timestamp rounded to current month by dividing by 86400
  timestamp: Int!
  # Profit and loss
  pnl: BigInt!
  # user predictions
  predictions: Int!
  # user participation
  participation: BigInt!
  # (correct prediction + settlement + creation)
  rewards: BigInt!
}

type MarketUser @entity {
  id: ID!
  # User pointer
  user: User!
  # Market pointer
  market: Market!
  # Is user market creator
  isMarketCreator: Boolean!
  # Is user market settler
  isMarketSettler: Boolean!
  # Total returns - Does not include creation and settlement reward
  totalReturns: BigInt!
  # Total participation amount
  totalParticipationAmount: BigInt!
  # Returns claimed (Prediction amount +/- Prediction reward / loss)
  returnsClaimed: Boolean!
  # Market Creator rewards
  creationReward: BigInt!
  # Market settler rewards
  settlementReward: BigInt!
  # Creation reward claimed
  creationRewardClaimed: Boolean!
  # Settlement reward claimed
  settlementRewardClaimed: Boolean!
  # Total predictions
  totalPredictions: Int!
  # Profit and loss
  pnl: BigInt!
  # last updated timestamp
  timestamp: Int!
  # User market predictions
  predictions: [MarketPrediction!]! @derivedFrom(field: "marketUser")
}

type MarketPrediction @entity {
  id: ID!
  # Market user id
  marketUser: MarketUser!
  # User pointer
  user: User!
  # Market pointer
  market: Market!
  # Pool pointer
  pool: Pool!
  # Positions allocated
  positions: BigInt!
  # Playing amount
  amount: BigInt!
  # Leverage
  leverage: Int!
  # boost mode applied
  boostMode: Boolean!
  # prediction timestamp
  timestamp: Int!
}

type Pool @entity {
  # market address + pool
  id: ID!
  # Market pointer
  market: Market!
  # Upper part of range
  upper: BigInt!
  # lower part of range
  lower: BigInt!
  # Total staked amount
  staked: BigInt!
  # Possible rewards
  rewards: BigInt!
  # Total positions
  positions: BigInt!
  # Winning pool
  winningPool: Boolean!
  # Predictions for this pool
  predictions: [MarketPrediction!]! @derivedFrom(field: "pool")
}

type Market @entity {
  id: ID!
  # Market phase
  phase: Phase!
  # Market asset
  asset: Asset!
  # Market duration in seconds
  duration: Int!
  # Market token address
  token: MarketToken!
  # creation
  createdAtTimestamp: Int!
  # market start timestamp
  startTimestamp: Int!
  # trading end time
  tradingEndTimestamp: Int!
  # waiting end time
  waitingEndTimestamp: Int!
  # reporting end time
  reportingEndTimestamp: Int!
  # dispute end time
  disputeEndTimestamp: Int!
  # market creation block number
  blockNumber: BigInt!
  # Winning pool
  winningPool: Pool
  # Initial market liquidity
  liquidity: BigInt!
  # total Predictions
  totalPredictions: Int!
  # Total market participants
  totalParticipants: Int!
  # Total participation
  totalParticipation: BigInt!
  # Market creator fee in percent
  creationFee: Int!
  # Market settler fee in percent
  settlerFee: Int!
  # Platform fee in percent
  platformFee: Int!
  # Potential reward
  potentialRewardPool: BigInt!
  # Reward pool
  rewardPool: BigInt!
  # Market Creator rewards
  creatorReward: BigInt!
  # Platform rewards
  platformReward: BigInt!
  # Market settler rewards
  settlerReward: BigInt!
  # User reward pool
  usersRewardPool: BigInt!
  # Market creator address
  creator: Bytes!
  # Market settler address
  settler: Bytes
  # Creation reward claimed
  creationRewardClaimed: Boolean!
  # Settlement reward claimed
  settlementRewardClaimed: Boolean!
  # platform reward claimed
  platformRewardClaimed: Boolean!
  # Loss constant
  lossConstant: Int!

  pools: [Pool!]! @derivedFrom(field: "market")
  predictions: [MarketPrediction!]! @derivedFrom(field: "market")
}
